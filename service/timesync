#!/bin/bash
### BEGIN INIT INFO
# Provides:          timesync
# Required-Start:    $remote_fs $syslog
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: Timesync init script
# Description:       Init script for wrapper around timesync process
### END INIT INFO

START_DATE=`date '+%Y%m%d-%H%M%S'`

TIMESYNC_LOG_DIR=/var/log/timesync
TIMESYNC_LOG_FILE=$TIMESYNC_LOG_DIR/timesync.$START_DATE
TIMESYNC_LOG_SYMLINK=/var/log/timesync.log
DAEMON=/usr/local/bin/timesync-wrapper
OPTS="-v -l $TIMESYNC_LOG_FILE"
PIDDIR=/var/run/timesync
PIDFILE=$PIDDIR/timesync.pid

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

function start_timesync
{
    echo "starting timesync..." >&2
    mkdir -p $TIMESYNC_LOG_DIR
    touch $TIMESYNC_LOG_FILE
    if [ -h $TIMESYNC_LOG_SYMLINK ] ; then
        rm $TIMESYNC_LOG_SYMLINK
    fi
    if [ ! -e $TIMESYNC_LOG_SYMLINK ] ; then
        ln -s $TIMESYNC_LOG_FILE $TIMESYNC_LOG_SYMLINK
    fi

    if [ ! -d $PIDDIR ] ; then
        mkdir $PIDDIR
    fi
    chown $USER:$USER $PIDDIR
    start-stop-daemon --background --pidfile $PIDFILE --start --exec $DAEMON -- $OPTS \
        || return 2
}

function stop_timesync
{
    echo "stopping timesync..." &>2
    start-stop-daemon --stop --retry 30 --pidfile $PIDFILE
}

case "$1" in
start)
    start_timesync
    ;;
stop)
    stop_timesync
    ;;
restart)
    stop_timesync
    start_timesync
    ;;
*)
    echo "Usage: /etc/init.d/$NAME {start|stop|restart}"
    ;;
esac

exit 0
